{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","utils/Api.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","headerLogo","alt","CurrentUserContext","React","createContext","undefined","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","likesTotal","length","role","style","backgroundImage","link","onClick","onCardClick","evt","stopPropagation","preventDefault","onCardDelete","name","onCardLike","Main","avatar","onEditAvatar","about","onEditProfile","onAddPlace","cards","map","index","key","Footer","PopupWithForm","popup","target","classList","contains","onClose","isOpen","title","action","onSubmit","noValidate","children","type","submitBtnText","ReactDOM","createPortal","document","getElementById","EditProfilePopup","useState","setName","description","setDescription","useEffect","onUpdateUser","id","value","placeholder","minLength","maxLength","pattern","onChange","required","EditAvatarPopup","avatarLinkRef","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setTitle","setLink","ImagePopup","api","baseUrl","headers","this","Promise","all","getInitialCards","getUserProfile","fetch","then","res","ok","json","reject","status","catch","err","console","log","method","body","JSON","stringify","cardInfo","cardId","authorization","App","setCurrentUser","setCards","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePopupOpen","setIsDeletePopupOpen","selectedCard","setSelectedCard","closeAllPopups","window","removeEventListener","handleEscClose","userProfile","initialCards","forEach","Provider","addEventListener","updateLike","newCard","newCards","c","cardItem","deleteCard","availableCards","filter","setUserAvatar","setUserProfile","addCard","Boolean","location","hostname","match","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.03741075.chunk.js","sourcesContent":["import React from 'react';\nimport headerLogo from '../images/logo.svg';\n\nfunction Header() { \n  return (\n    <header className=\"header\">\n      <img className=\"logo\" src={headerLogo} alt=\"Around logo\"/>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\nexport const CurrentUserContext = React.createContext(undefined);","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n    \n    const currentUser = React.useContext(CurrentUserContext);\n    \n    // Checking if user is the owner of the current card\n    const isOwn = props.card.owner._id === currentUser._id;\n\n    // Creating a variable which is set in `className` for the delete button\n    const cardDeleteButtonClassName = (\n       `button button__delete ${isOwn ? '' : 'button__delete_hidden'}`\n    );\n    \n    // Check if the card was liked by the current user\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n\n    // Create a variable which you then set in `className` for the like button\n    const cardLikeButtonClassName = (`button button__like ${isLiked ? 'button__like_status_selected' : ''}`);\n    \n    const likesTotal = props.card.likes.length;\n\n    function handleCardClick() {\n        props.onCardClick(props.card);\n    }\n    \n    function handleLikeClick(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        props.onCardLike(props.card);\n    }\n    \n    function handleCardDelete(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        props.onCardDelete(props.card);\n    }\n\n    return (\n        <li className=\"element\">\n          <div className=\"element__image\" role=\"img\" style={{ backgroundImage: `url(${props.card.link})` }} onClick={handleCardClick}></div>\n            <button className={cardDeleteButtonClassName} onClick={handleCardDelete}></button>\n            <div className=\"element__group\">\n              <h2 className=\"element__title\">{props.card.name}</h2>\n              <div className=\"element__like-container\">\n                <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n              <div className=\"element__likes\">{likesTotal}</div>   \n            </div>\n          </div>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction Main(props) {\n    \n    const currentUser = React.useContext(CurrentUserContext);\n    \n    return (\n        <main className=\"content\">\n          <section className=\"profile\">\n            <div className=\"profile__avatar-container\">\n              <img className=\"profile__avatar\" src={currentUser.avatar} alt=\"profile avatar\"/>\n              <button className=\"button button__avatar\" onClick={props.onEditAvatar}></button>\n            </div>\n            <div className=\"profile__info\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <p className=\"profile__about-me\">{currentUser.about}</p>\n              <button className=\"button button__edit\" onClick={props.onEditProfile}></button>\n            </div>\n            <button className=\"button button__add\" onClick={props.onAddPlace}></button>    \n          </section>\n          <section className=\"elements\">\n            <ul className=\"elements__container\">\n              {props.cards.map((card, index) => (\n                <Card key={index} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike} onCardDelete={props.onCardDelete}/>\n                )\n              )}\n            </ul>\n          </section>\n        </main>\n      );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() { \n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\">&copy; 2020 Around The U.S.</p>  \n    </footer>\n  );\n}\n\nexport default Footer;","import React from 'react';\nimport ReactDOM from \"react-dom\";\n\nfunction PopupWithForm(props) {\n    \n    function handleOverlayClick(evt) {\n        if (evt.target.classList.contains('popup')) {\n          props.onClose();\n        }\n      }\n    \n    const popup = (\n    <div onClick={handleOverlayClick} className={`popup popup_type_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}>\n      <div className=\"popup__container\">\n        <button className=\"popup__close-button\" onClick={props.onClose}></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        <form action=\"#\" className=\"form\" name={props.name} onSubmit={props.onSubmit} noValidate>\n            {props.children}\n            <button type=\"submit\" className=\"form__submit-button\">{props.submitBtnText}</button>\n        </form>\n      </div>\n    </div>\n    )\n    return ReactDOM.createPortal(\n         popup, document.getElementById(\"modal-root\")\n    );\n}\n\n\nexport default PopupWithForm;\n\n\n","import React, {useState} from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    const [name, setName] = useState();\n    const [description, setDescription] = useState();\n\n    // After loading the current user from the API\n    // their data will be used in managed components.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleNameChange(evt) {\n        setName(evt.target.value);\n    }\n\n    function handleDescriptionChange(evt) {\n        setDescription(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        // Prevent the browser from navigating to the form address\n        evt.preventDefault();\n        // Pass the values of the managed components to the external handler\n        props.onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm\n            name=\"edit-profile\"\n            title=\"Edit Profile\"\n            submitBtnText=\"Save\"\n            isOpen={props.isOpen}\n            onClose={props.onClose}\n            onSubmit={handleSubmit}\n            >\n              <label className=\"form__field\">\n                <input className=\"form__input form__input_type_name\" id=\"name-input\" type=\"text\" title=\"Name\" name=\"name\" value={name} placeholder=\"Name\" minLength=\"2\" maxLength=\"40\" pattern=\"^[A-Za-z]+[A-Za-z -]{1,}\" onChange={handleNameChange} required/>\n                <span className=\"form__input-error form__input-error_active\" id=\"name-input-error\"></span>    \n              </label>\n              <label className=\"form__field\">\n                <input className=\"form__input form__input_type_about\" id=\"about-input\" type=\"text\" title=\"About Me\" name=\"about\" value={description} placeholder=\"About Me\" minLength=\"2\" maxLength=\"200\" onChange={handleDescriptionChange} required/>\n                <span className=\"form__input-error form__input-error_active\" id=\"about-input-error\"></span>    \n              </label>\n          </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n\n    const avatarLinkRef = React.useRef();\n\n    function handleSubmit(evt) {\n        // Prevent the browser from navigating to the form address\n        evt.preventDefault();\n        // Pass the values of the managed components to the external handler\n        props.onUpdateAvatar({\n            avatar: avatarLinkRef.current.value\n        });\n    }\n\n    return (\n        <PopupWithForm \n            name=\"avatar\" \n            title=\"Change profile picture\"\n            submitBtnText=\"Save\"\n            isOpen={props.isOpen} \n            onClose={props.onClose} \n            onSubmit={handleSubmit} \n            >\n            <label className=\"form__field\">\n                <input className=\"form__input form__input_type_url\" type=\"url\" id=\"url-input\" title=\"Image Link\" name=\"link\" placeholder=\"Image link\" ref={avatarLinkRef} required/>\n                <span className=\"form__input-error form__input-error_active\" id=\"url-input-error\"></span>\n            </label>    \n        </PopupWithForm>\n    );\n\n}\n\nexport default EditAvatarPopup;","import React, {useState} from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n\n    const [title, setTitle] = useState();\n    const [link, setLink] = useState();\n\n    function handleTitleChange(evt) {\n        setTitle(evt.target.value);\n    }\n\n    function handleLinkChange(evt) {\n        setLink(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        // Prevent the browser from navigating to the form address\n        evt.preventDefault();\n        // Pass the values of the managed components to the external handler\n        props.onAddPlace({\n            title: title,\n            link: link,\n        });\n    }\n\n    return (\n        <PopupWithForm \n            name=\"add-place\" \n            title=\"New place\" \n            submitBtnText=\"Create\"\n            isOpen={props.isOpen} \n            onClose={props.onClose} \n            onSubmit={handleSubmit}\n            >\n            <label className=\"form__field\">\n              <input className=\"form__input form__input_type_place-title\" id=\"title-input\" type=\"text\" title=\"Title\" name=\"name\" placeholder=\"Title\" minLength=\"2\" maxLength=\"30\" pattern=\"^[A-Za-z]+[A-Za-z -]{1,}\" value={title} onChange={handleTitleChange} required/>\n              <span className=\"form__input-error form__input-error_active\" id=\"title-input-error\"></span> \n            </label>\n            <label className=\"form__field\">\n              <input className=\"form__input form__input_type_url\" type=\"url\" id=\"url-input\" title=\"Image Link\" name=\"link\" placeholder=\"Image link\" value={link} onChange={handleLinkChange} required/>\n              <span className=\"form__input-error form__input-error_active\" id=\"url-input-error\"></span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react';\n\nfunction ImagePopup(props) {\n    \n    function handleOverlayClick(evt) {\n        if (evt.target.classList.contains('popup')) {\n          props.onClose();\n        }\n      }\n\n    return (\n        <div className={`popup popup_type_image ${props.card ? 'popup_opened' : ''}`} onClick={handleOverlayClick}>\n          <div className=\"popup__container popup__container_type_image\">\n            <button className=\"popup__close-button\" onClick={props.onClose}></button>\n            <img className=\"popup__image\" src={props.card ? props.card.link : ''} alt={props.card ?  props.card.name : ''}/>\n            <p className=\"popup__image-label\">{props.card ? props.card.name : ''}</p>\n          </div>\n        </div>\n    );\n}\n\nexport default ImagePopup;","class Api {\n  constructor({baseUrl, headers}) {\n    this.baseUrl = baseUrl;\n    this.headers = headers; \n  }\n    \n    getAppInfo(){\n        return Promise.all([this.getInitialCards(), this.getUserProfile()])\n    }\n    \n    getInitialCards() {\n        return fetch(`${this.baseUrl}/cards`, {\n            headers: this.headers\n        })\n            .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n                return Promise.reject(`Error: ${res.status}`);\n        })\n    }\n    \n    getUserProfile(){\n        return fetch(`${this.baseUrl}/users/me`, {\n            headers: this.headers\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n                return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    \n    setUserAvatar(avatar){\n        return fetch(`${this.baseUrl}/users/me/avatar`, {\n            headers: this.headers,\n            method: \"PATCH\",\n            body: JSON.stringify(avatar)\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n                return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    \n    setUserProfile({name, about}) {\n        return fetch(`${this.baseUrl}/users/me`, {\n            headers: this.headers,\n            method: \"PATCH\",\n            body: JSON.stringify({name, about})\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        }); \n    }\n    \n    addCard(cardInfo) {\n        return fetch(`${this.baseUrl}/cards`, {\n            headers: this.headers,\n            method: \"POST\",\n            body: JSON.stringify(cardInfo)\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        }); \n    }\n    \n    deleteCard(_id){\n        return fetch(`${this.baseUrl}/cards/${_id}`, {\n            headers: this.headers,\n            method: \"DELETE\"\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        }); \n    }\n    \n    updateLike(cardId, isLiked){\n        return fetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n            headers: this.headers,\n            method: isLiked ? 'PUT' : 'DELETE'\n        })\n        .then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        })\n        .catch((err) => {\n          console.log(err);\n        }); \n    }\n\n}\n\n//API \nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n  headers: {\n    authorization: \"59b76db9-8593-4042-9d89-647c9c96a94c\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n\nexport default api;\n\n\n","import React, { useState } from 'react';\nimport '../index.css';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from \"./PopupWithForm\";\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isDeletePopupOpen, setIsDeletePopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    \n    React.useEffect(() => {\n        api.getUserProfile().then((userProfile) => {\n            setCurrentUser(userProfile);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n    \n    React.useEffect(() => {\n        api.getInitialCards().then((initialCards) => {\n            initialCards.forEach((card) => {\n                setCards([...initialCards, card]);\n            });\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n    \n    function handleCardLike(card) {\n        // Check one more time if this card was already liked\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        // Send a request to the API and getting the updated card data\n        api.updateLike(card._id, !isLiked).then((newCard) => {\n            // Create a new array based on the existing one and putting a new card into it\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            // Update the state\n            setCards(newCards);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n    \n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n        window.addEventListener('keyup', handleEscClose);\n    }    \n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n        window.addEventListener('keyup', handleEscClose);\n    }    \n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n        window.addEventListener('keyup', handleEscClose);\n    } \n    function handleCardClick(card) {\n        setSelectedCard(card);\n        window.addEventListener('keyup', handleEscClose);\n    }\n    function handleDeleteClick() {\n        setIsDeletePopupOpen(true);\n        window.addEventListener('keyup', handleEscClose);\n    }\n    function closeAllPopups() {\n      window.removeEventListener('keyup', handleEscClose);\n      setIsAddPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setIsDeletePopupOpen(false);\n      setSelectedCard(false);\n    }\n    \n    function handleEscClose(evt) {\n        if (evt.key === 'Escape') {\n          closeAllPopups()\n        }\n    }\n    \n    function handleUpdateAvatar({avatar}) {\n        api.setUserAvatar({avatar: avatar}).then((userProfile) => {\n            setCurrentUser(userProfile);\n            setIsEditAvatarPopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n    \n    function handleUpdateUser({name, about}) {\n        api.setUserProfile({name: name, about: about}).then((userProfile) => {\n            setCurrentUser(userProfile);\n            setIsEditProfilePopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n    \n    function handleAddPlace({title, link}) {\n        api.addCard({name: title, link: link,}).then((newCard) => {\n            setCards([...cards, newCard]);\n            setIsAddPlacePopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n    \n    function handleCardDelete(cardItem) {\n        api.deleteCard(cardItem._id).then(() => {\n            const availableCards = cards.filter((card) => card._id !== cardItem._id)\n            setCards(availableCards);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n      \n    \n  return (\n    <>\n      <div className=\"page\">\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header/>\n        <Main cards={cards} onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick} onCardLike={handleCardLike} onCardDelete={handleCardDelete}/>\n        <Footer/>\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar}/>\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace}/>\n        <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n        <PopupWithForm\n            name=\"delete\"\n            title=\"Are you sure?\"\n            isOpen={isDeletePopupOpen}\n            onClose={closeAllPopups} >\n            <form action=\"#\" className=\"form\" name=\"delete-card\" noValidate>\n              <button className=\"form__submit-button form__submit-button_confirm\">Yes</button>\n            </form>\n          </PopupWithForm>\n      </CurrentUserContext.Provider>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.b797581b.svg\";"],"sourceRoot":""}